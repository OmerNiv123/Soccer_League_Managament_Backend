openapi: 3.0.0
info:
  title: SportMonks SuperLeague API
  description: This is a simple API for SportMonks SuperLeague Denmark
  
tags:
  - User
  - Team
  - Player
  - League
  - Favorites
  - Manager

paths:

  /register:
    post:
      tags:
      - User
      summary: A new user adds to the system
      description: YAML object conntains all the details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      responses:
        "201":
          description: A new user has been created
        "400":
          description: Wrong parameters
  /login:
    post:
      tags:
      - User
      summary: logs in to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        "201":
          description: the user got in to the system
        "400":
          description: Wrong parameters
  /logout:
    post:
      tags:
      - User
      summary: logs out of the system
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/UserLogin'
        # required: true
      responses:
        "200":
          description: the user got out of the system Sucs
        "400":
          description: Something went Wrong 

  /teams/detailsById/{teamId}:
    get:
      tags:
      - Team
      parameters:
      - name: teamId
        in: path
        description: ID of team to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 85
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        "404":
          description: Team not Found
  /teams/detailsByName/{teamName}:
    get:
      tags:
      - Team
      parameters:
      - name: teamName
        in: path
        description: name of team to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Silkeborg  
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        "404":
          description: Team Not Found
  /teams/allTeams:
    get:
      tags:
      - Team
      responses:
        "200":
          description: All Super League teams sent
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/shortTeam'
        "400":
          description: Something went Wrong 

  
  /player/fullDetails/{playerId}:
    get:
      tags:
      - Player
      parameters:
      - name: playerId
        in: path
        description: id of player to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 25057
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerFull'
        "404":
          description: Player Not Found
  /player/detailsByName/{playerName}:
    get:
      tags:
      - Player
      parameters:
      - name: playerName
        in: path
        description: write player name
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Peter
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerFull'
        "404":
          description: Player Not Found
  /player/allPlayers:
      get:
        tags:
        - Player
        responses:
          "200":
            description: successful search
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PlayerFull'
          "400":
            description: Something went Wrong

  /league/getDetails:
    get:
      tags:
      - League
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
        "400":
          description: Something Went Worng
  /league/getCurStage:
    get:
      tags:
        - League
      responses:
        "200":
          description: successful stage data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'
        "400":
          description: Something Went Worng

  /favorites/addGame:
    post:
      tags:
      - Favorites
      summary: adds fav game
      requestBody:
        content:
          application/json:
            schema:
             type: object
             properties:
              id:
                type: integer
                example: 6
        required: true
      responses:
        "201":
          description: game was added to favs
        "400":
          description: Wrong parameters
  /favorites/delGame:
    post:
      tags:
      - Favorites
      summary: remove fav game
      requestBody:
        content:
          application/json:
            schema:
             type: object
             properties:
              id:
                type: integer
                example: 6
        required: true
      responses:
        "201":
          description: game was removed
        "409":
          description: Game not found
  /favorites/getGames:
    get:
      tags:
      - Favorites
      summary: search fav games of user
      responses:
        "200":
          description: successful search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FutureGame'
        "400":
          description: Wrong parameters

  /manage/createGame:
    post:
      tags:
        - Manager
      summary: add game to system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGame'
        required: true
      responses:
        "201":
          description: the Game Created Successfully
        "400":
          description: Wrong parameters
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /manage/createEvent:
    post:
      tags:
        - Manager
      summary: add Event to game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEvent'
        required: true
      responses:
        "201":
          description: the Event Created Successfully
        "400":
          description: Wrong parameters
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /manage/enterScore:
    put:
      tags:
        - Manager
      summary: add Socre to game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGame'
        required: true
      responses:
        "201":
          description: the Game Updated Successfully
        "400":
          description: Wrong parameters
        "401":
          description: Unauthorized
        "403":
          description: Forbidden

components:
  schemas:

    UserRegister:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: between 3 to 8 chars
          example: omer123
        firstname:
          type: string
          example: gal
        lastname:
          type: string
          example: zamir
        country:
          type: string
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: between 5 to 10 chars, at least one of them is a number and a special char
          format: password
          example: gal@123
        email:
          type: string
          format: email
          example: omer@gmail.com
        imageUrl:
          type: string
          format: URL
          example: https://en.wikipedia.org/wiki/Diego_Maradona#/media/File:Maradona-Mundial_86_con_la_copa.JPG
      description: containing user info

    UserLogin:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: between 3 to 8 chars
          example: omer
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: between 5 to 10 chars, at least one of them is a number and a special char
          format: password
          example: gal123!
      description: let user into the system

    Team:
      type: object
      properties:
        id:
          type: integer
          example: 85
        name:
          type: string
          example: Viborg
        players:
          type: array
          items: 
            $ref: '#/components/schemas/PlayerFull'
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game'
      description: Team's base properties

    shortTeam:
      type: object
      properties:
        id:
          type: integer
          example: 85
        name: 
          type: string
          example: København
        imageUrl:
          pattern: URL
          type: string
          description: URL for the team's image
          example: https://cloudinary.com/
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game'

    Player:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: messi
        imageUrl:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/
        position:
          type: integer
          example: 1        
        team:
          type: string
          example: barca
      description: Player's base properties

    Coach:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: messi
      description: Coach's base properties

    Game:
      type: object
      properties:
        game_id:
          type: integer
          example: 5
        home_team_id:
          type: integer
          example: 85
        away_team_id:
          type: integer
          example: 2585
        date_time:
          type: string
          example: "2021-05-15 20:30:00"
        home_goals:
          type: integer 
          example: 2
        away_goals:
          type: integer 
          example: 2
        winner_team_id:
          type: integer
          example: 2585
        stadium:
          type: string
          example: Camp Nou
        referee_id:
          type: integer
          example: 2
      description: game's base properties

    FutureGame:
      type: object
      properties:
        game_id:
          type: integer
          example: 15
        date_time:
          type: string
          example: "2021-05-15 20:30:00"        
        home_team_id:
          type: integer
          example: 85
        away_team_id:
          type: integer
          example: 2585        
        stadium:
          type: string
          example: Camp Nou

    PastGame:
      type: object
      properties:
        game_id:
          type: integer
          example: 5
        date_time:
          type: string
          example: "2021-05-15 20:30:00"
        home_team_id:
          type: integer
          example: 85
        away_team_id:
          type: integer
          example: 2585
        stadium:
          type: string
          example: Camp Nou
        home_goals:
          type: integer 
          example: 2
        away_goals:
          type: integer 
          example: 2
        winner_team_id:
          type: integer
          example: 2585
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event" 
        
    League:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: "2020/2021"
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
        next_match_details:
          $ref: '#/components/schemas/Game'

    PlayerFull:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: messi
        team_name:
          type: string
          example: barca
        team_id:
          type: integer
          example: 96
        imageUrl:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/
        position:
          type: integer
          example: 1
        common_name:
          type: string
          example: messi
        nationality:
          type: string
          example: israel
        birthDate:
          type: string
          example: 12/02/2021
        birthCountry:
          type: string
          example: israel
        height:
          type: string
          example: 165 cm
        weight:
          type: string
          example: 70 kg
    
    Event:
      type: object
      properties:
        id:
          type: integer
          example: 123
        date_time:
          type: string
          example: "2021-05-15 20:30:00"
        minute:
          type: integer
          example: 32
        description:
          type: string
          example: "yellow card"
      
    CreateEvent:
      type: object
      properties:
        game_id:
          type: integer
          example: 8
        minute:
          type: integer
          example: 32
        description:
          type: string
          example: "yellow card"
    
    Stage:
      type: object
      properties:
        futureGames: 
          type: array
          items:
            $ref: "#/components/schemas/FutureGame"
        pastGames:
          type: array
          items:
            $ref: "#/components/schemas/PastGame"

    CreateGame:
      type: object
      properties:
        home_team_id:
          type: integer
          example: 85
        away_team_id:
          type: integer
          example: 2585
        date_time:
          type: string
          example: "2021-05-15 20:30:00"
        stadium:
          type: string
          example: Camp Nou
        referee_id:
          type: integer
          example: 2
      description: game's base properties

    UpdateGame:
      type: object
      properties:
        game_id:
          type: integer
          example: 5
        home_goals:
          type: integer 
          example: 2
        away_goals:
          type: integer 
          example: 2
      description: game's base properties



# /player/partialDetails/{playerId}:
  #   get:
  #     tags:
  #     - Player
  #     parameters:
  #     - name: playerId
  #       in: path
  #       description: id of player to return
  #       required: true
  #       style: simple
  #       explode: false
  #       schema:
  #         type: integer
  #         example: 123
  #     responses:
  #       "200":
  #         description: successful search
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Player'
  #       "404":
  #         description: Player Not Found




  # /coach/{coachId}:
  #   get:
  #     tags:
  #     - Coach
  #     parameters:
  #     - name: coachId
  #       in: path
  #       description: id of Coach to return
  #       required: true
  #       style: simple
  #       explode: false
  #       schema:
  #         type: integer
  #         example: 123
  #     responses:
  #       "200":
  #         description: successful search
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Coach'
  #       "400":
  #         description: Wrong parameters



  # /favorites/player:
  #   post:
  #     tags:
  #     - Add Favorites
  #     summary: adds fav player
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Player'
  #       required: true
  #     responses:
  #       "201":
  #         description: player was added to favs
  #       "400":
  #         description: Wrong parameters
  # /favorites/team:
  #   post:
  #     tags:
  #     - Add Favorites
  #     summary: adds fav team
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Team'
  #       required: true
  #     responses:
  #       "201":
  #         description: team was added to favs
  #       "400":
  #         description: Wrong parameters



  # /favorites/player/{userId}:
  #   get:
  #     tags:
  #     - Get Favorites
  #     summary: search fav players of user
  #     parameters:
  #     - name: userId
  #       in: path
  #       description: return fav players of user
  #       required: true
  #       style: simple
  #       explode: false
  #       schema:
  #         type: integer
  #         example: 123
  #     responses:
  #       "200":
  #         description: successful search
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Player'
  #       "400":
  #         description: Wrong parameters
  # /favorites/team/{userId}:
  #   get:
  #     tags:
  #     - Get Favorites
  #     summary: search fav teams of user
  #     parameters:
  #     - name: userId
  #       in: path
  #       description: return fav teams of user
  #       required: true
  #       style: simple
  #       explode: false
  #       schema:
  #         type: integer
  #         example: 123
  #     responses:
  #       "200":
  #         description: successful search
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Team'
  #       "400":
  #         description: Wrong parameters


# openapi: 3.0.0
# info:
#   title: api
#   description: API for  project
#   version: 1.0.0
# tags:
#   - name: Users
#   - name: Auth
#   - name: League
#   - name: Players
#   - name: Teams
#   - name: Games
# paths:
#   /Register:
#     post:
#       tags:
#         - Auth
#       summary: Add new user
#       description: A new user from the client is added to the server
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               $ref: "#/components/schemas/User"
#       responses:
#         "201":
#           description: A new user has been added
#         "400":
#           description: wrong input parameters
#   /Login:
#     post:
#       tags:
#         - Auth
#       summary: Login an exist user
#       description: An exist user login to the system
#       requestBody:
#         required: true
#         content:
#           application/json:
#             schema:
#               $ref: "#/components/schemas/LoginScheme"
#       responses:
#         "200":
#           description: >
#             User was found in the DB and authenitcated successfully.
#             The session ID is returned in a cookie named `session`. 
#             You should include this cookie in subsequent requests
#           # headers:
#           #   Set-Cookie:
#           #     schema:
#           #       type: string
#           #       example: session=87s97sdhgf279293f8w0e9
#             # Note that the Set-Cookie header and securitySchemes are not connected in any way, and the Set-Header definition is for documentation purposes only.
#         "401":
#           description: Authentication failed
#   /logout:
#     post:
#       tags:
#         - Auth
#       summary: logout a user from the system and delete his cookie
#       responses:
#         "200":
#           description: "the user has ben successfully logged out"
#   /league/getDetails:
#     get:
#       tags:
#         - league
#       summary: Return the details about the current league
#       responses:
#         "200":
#           description: data about the current league returned
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: "#/components/schemas/League"
#         "400":
#           description: wrong input parameters
#   /users/favoritePlayers:
#     get:
#       tags:
#         - Users
#         - Players
#       summary: Return the favorite players that were saved by user
#       parameters:
#       responses:
#         "200":
#           description: data about the user's favorites players returned
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: "#/components/schemas/PlayerPreview"
#         "401":
#           description: user is not authorized
#     post:
#       summary: save player in the favorites list of a user
#       tags:
#         - Users
#         - Players
#       requestBody:
#         content:
#           application/json:
#             schema:
#               type: object
#               properties:
#                 playerId:
#                   type: string
#                   description: player's id which the user saved
#                   example: 85
#       responses:
#         "201":
#           description: The player successfully saved as favorite
#         "401":
#           description: user is not authorized
#   /teams/teamFullDetails/{teamId}:
#     get:
#       summary: get full deatils about a team
#       description: useful for team page
#       tags:
#         - Teams
#       parameters:
#         - in: path
#           name: teamId
#           description: team's id
#           required: true
#           schema:
#             type: integer
#       responses:
#         "200":
#           description: data about the team
#           content:
#             application/json:
#               schema:
#                 $ref: "#/components/schemas/Team"
#         "404":
#           description: teamId is not exists
# components:
#   schemas:
#     User:
#       type: object
#       properties:
#         username:
#           maxLength: 8
#           minLength: 3
#           type: string
#           description: username conatins between 3 to 8 letters only
#           example: ladygaga
#         firstname:
#           type: string
#           description: user's first name
#           example: Stefani
#         lastname:
#           type: string
#           description: user's last name
#           example: Germanotta
#         country:
#           type: string
#           description: user's country
#           example: USA
#         password:
#           maxLength: 10
#           minLength: 5
#           type: string
#           description:
#             password conatins between 5 to 10 chars, at least one of them
#             is a number and a special char
#           format: password
#           example: lady@56
#         email:
#           pattern: email
#           type: string
#           description: user's email
#           example: ladygaga@gmail.com
#         image-url:
#           pattern: URL
#           type: string
#           description: URL for the user's image
#           example: https://cloudinary.com/
#       description: Model containing user info
#     LoginScheme:
#       type: object
#       properties:
#         username:
#           type: string
#           minLength: 3
#           maxLength: 8
#           description: username conatins letters only
#           example: naorbe
#         password:
#           type: string
#           minLength: 5
#           maxLength: 10
#           format: password
#           description: password conatins at least one number and one special char
#           example: naor@55
#     League:
#       type: object
#       properties:
#         league_name:
#           type: string
#           description: league name
#           example: Superliga
#         current_season_name:
#           type: string
#           description: current season name
#           example: "2020/2021"
#         current_stage_name:
#           type: string
#           description: current stage name
#           example: Championship Round
#     PlayerPreview:
#       type: object
#       properties:
#         name:
#           type: string
#           description: player's name
#           example: Sten Michael Grytebust
#         image:
#           type: string
#           description: player's image
#           format: URL
#           example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
#         position:
#           type: integer
#           description: player's position in team
#           example: 1
#         team_name:
#           type: string
#           description: player's team name
#           example: København
#     Team:
#       type: object
#       properties:
#         name:
#           type: string
#           description: team name
#           example: København
#         players:
#           type: array
#           items:
#             type: object
#             $ref: "#/components/schemas/PlayerPreview"
